server.servlet.context-path=/intake-service/api/

#datasource configuration
spring.datasource.url=jdbc:mysql://localhost:3306/salesforce?allowPublicKeyRetrieval=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.validationQuery=SELECT 1
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.n.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

rsa.privateKey=classpath:certs/private.pem
rsa.publicKey=classpath:certs/public.pem
jwt.key=secret


#encryption
app.encryption.secret=0123456789123456

#Keycloak configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KC_BASE_URL}/realms/${KC_REALM}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KC_BASE_URL}/realms/${KC_REALM}/protocol/openid-connect/certs

#keycloak client configuration
kc.url=${KC_BASE_URL}
kc.auth.url=${KC_BASE_URL}/realms/${KC_REALM}/protocol/openid-connect/token
kc.realm=${KC_REALM}
kc.client.id=${KC_CLIENT_ID}
kc.client.secret=${KC_CLIENT_SECRET}
kc.administrator.username=${KC_ADMIN_USER}
kc.administrator.password=${KC_ADMIN_PASSWORD}
kc.intake.client=${KC_INTAKE_CLIENT}

#RabbitMQ
spring.rabbitmq.host=${RABBITMQ_URL}
spring.rabbitmq.virtual-host=${RABBITMQ_V_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=${RABBITMQ_USER}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
rabbitmq.patient.intake.exchange=${RABBITMQ_EXCHANGE}
rabbitmq.patient.intake.potential.routing.key=${RABBITMQ_POTENTIAL_ROUTING_KEY}
rabbitmq.patient.intake.target.routing.key=${RABBITMQ_TARGET_ROUTING_KEY}


